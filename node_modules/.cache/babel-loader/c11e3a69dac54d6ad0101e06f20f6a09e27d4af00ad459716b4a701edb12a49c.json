{"ast":null,"code":"var _jsxFileName = \"D:\\\\SSD Backup\\\\Desktop\\\\HTML-KIKO\\\\Advanced 2022 JS Projects\\\\2023 React\\\\react-nodejs-trivia app\\\\react-node-trivia-app\\\\src\\\\components\\\\Categories.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Categories extends Component {\n  constructor() {\n    super();\n    this.state = {\n      buttonId: \"\",\n      catFull: \"\",\n      message: \"Pick your category : \"\n    };\n  }\n  chooseCategory(cat) {\n    let catFull;\n    //NEW WAY OF DOING : id for each button is the case name, so when a button is clicked, you get element by id and change its background color\n    this.setState({\n      buttonId: `${cat}`\n    }, () => {\n      switch (cat) {\n        case \"genKnow\":\n          catFull = \"General Knowledge\";\n          // now, you would call a component where the variable passed is the name of the apiObject\n          // so if its general knlowedge, you create a general Knowledge object, and in each of the html components\n          // i will do apiObject.question[i]...\n          break;\n        case \"art\":\n          console.log(cat);\n          catFull = \"Art\";\n          break;\n        case \"sports\":\n          console.log(cat);\n          catFull = \"Sports\";\n          break;\n        case \"myth\":\n          console.log(cat);\n          catFull = \"Mythology\";\n          break;\n        case \"history\":\n          console.log(cat);\n          catFull = \"History\";\n          break;\n        case \"geo\":\n          console.log(cat);\n          catFull = \"Geography\";\n          break;\n        case \"animals\":\n          console.log(cat);\n          catFull = \"Animals\";\n          break;\n      }\n      let currentBtn = document.getElementById(this.state.buttonId);\n      let allButtons = document.querySelectorAll(\".onclickButtonsDiv button\");\n      if (currentBtn == null || catFull == null) {\n        console.log(\"NULL\");\n      } else {\n        this.setState({\n          buttonId: `${cat}`,\n          catFull: `${catFull}`,\n          message: `You chose ${catFull}`\n        });\n        allButtons.forEach(currentBtn => {\n          currentBtn.style.backgroundColor = \"white\";\n        });\n        // console.log(document.querySelectorAll(\".onclickButtonsDiv button\"));\n        currentBtn.style.backgroundColor = \"#baeafa\";\n      }\n    });\n  }\n  render() {\n    // in the future, i will pass a database the apitoken as parameter\n    // for each object, we will have apiObject.name in the future\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"categoryPickHeader\",\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"onclickButtonsDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"genKnow\",\n            onClick: () => this.chooseCategory(\"genKnow\"),\n            children: \"General Knowledge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"art\",\n            onClick: () => this.chooseCategory(\"art\"),\n            children: \"Art\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sports\",\n            onClick: () => this.chooseCategory(\"sports\"),\n            children: \"Sports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"myth\",\n            onClick: () => this.chooseCategory(\"myth\"),\n            children: \"Mythology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"history\",\n            onClick: () => this.chooseCategory(\"history\"),\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"geo\",\n            onClick: () => this.chooseCategory(\"geo\"),\n            children: \"Geography\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"animals\",\n            onClick: () => this.chooseCategory(\"animals\"),\n            children: \"Animals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Categories;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Categories","constructor","state","buttonId","catFull","message","chooseCategory","cat","setState","console","log","currentBtn","document","getElementById","allButtons","querySelectorAll","forEach","style","backgroundColor","render","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick"],"sources":["D:/SSD Backup/Desktop/HTML-KIKO/Advanced 2022 JS Projects/2023 React/react-nodejs-trivia app/react-node-trivia-app/src/components/Categories.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport '../App.css';\r\n\r\nclass Categories extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      buttonId: \"\",\r\n      catFull: \"\",\r\n      message: \"Pick your category : \"\r\n    }\r\n  }\r\n  chooseCategory(cat) {\r\n    let catFull;\r\n    //NEW WAY OF DOING : id for each button is the case name, so when a button is clicked, you get element by id and change its background color\r\n    this.setState({\r\n      buttonId: `${cat}`\r\n    }, () => {\r\n        switch (cat) {\r\n          case \"genKnow\":\r\n          catFull = \"General Knowledge\";\r\n            // now, you would call a component where the variable passed is the name of the apiObject\r\n            // so if its general knlowedge, you create a general Knowledge object, and in each of the html components\r\n            // i will do apiObject.question[i]...\r\n            break;\r\n          case \"art\":\r\n            console.log(cat);\r\n            catFull = \"Art\";\r\n            break;\r\n          case \"sports\":\r\n            console.log(cat);\r\n            catFull = \"Sports\";\r\n            break;\r\n          case \"myth\":\r\n            console.log(cat);\r\n            catFull = \"Mythology\";\r\n            break;\r\n          case \"history\":\r\n            console.log(cat);\r\n            catFull = \"History\";\r\n            break;\r\n          case \"geo\":\r\n            console.log(cat);\r\n            catFull = \"Geography\";\r\n            break;\r\n          case \"animals\":\r\n            console.log(cat);\r\n            catFull = \"Animals\";\r\n            break;\r\n        }\r\n        let currentBtn = document.getElementById(this.state.buttonId);\r\n        let allButtons = document.querySelectorAll(\".onclickButtonsDiv button\");\r\n        if (currentBtn == null || catFull == null) {\r\n            console.log(\"NULL\");\r\n        }else {\r\n          this.setState({\r\n            buttonId: `${cat}`,\r\n            catFull: `${catFull}`,\r\n            message: `You chose ${catFull}`\r\n          })\r\n          allButtons.forEach((currentBtn) => {\r\n              currentBtn.style.backgroundColor = \"white\";\r\n          });\r\n          // console.log(document.querySelectorAll(\".onclickButtonsDiv button\"));\r\n          currentBtn.style.backgroundColor = \"#baeafa\";\r\n        }\r\n    })\r\n\r\n  }\r\n  render() {\r\n    // in the future, i will pass a database the apitoken as parameter\r\n    // for each object, we will have apiObject.name in the future\r\n    return (\r\n      <div>\r\n        <h1 id=\"categoryPickHeader\">{this.state.message}</h1>\r\n        <div className=\"onclickButtonsDiv\">\r\n\r\n          <div>\r\n            <button id=\"genKnow\" onClick={ () => this.chooseCategory(\"genKnow\")}>General Knowledge</button>\r\n            <button id=\"art\" onClick={ () => this.chooseCategory(\"art\")}>Art</button>\r\n          </div>\r\n          <div>\r\n            <button id=\"sports\" onClick={ () => this.chooseCategory(\"sports\")}>Sports</button>\r\n            <button id=\"myth\" onClick={ () => this.chooseCategory(\"myth\")}>Mythology</button>\r\n            <button id=\"history\" onClick={ () => this.chooseCategory(\"history\")}>History</button>\r\n          </div>\r\n          <div>\r\n            <button id=\"geo\" onClick={ () => this.chooseCategory(\"geo\")}>Geography</button>\r\n            <button id=\"animals\" onClick={ () => this.chooseCategory(\"animals\")}>Animals</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Categories;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}