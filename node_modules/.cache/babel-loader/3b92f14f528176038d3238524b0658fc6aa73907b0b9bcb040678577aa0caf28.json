{"ast":null,"code":"var _jsxFileName = \"D:\\\\SSD Backup\\\\Desktop\\\\HTML-KIKO\\\\Advanced 2022 JS Projects\\\\2023 React\\\\react-nodejs-trivia app\\\\react-node-trivia-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport LoginRegister from \"./components/LoginRegister\";\nimport GreetUser from \"./components/GreetUser\";\nimport Categories from \"./components/Categories\";\nimport QuizParams from \"./components/QuizParams\";\n\n// fetch user in here\n// if i want to post or get, i do it in the other files\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckLogin() {\n  return /*#__PURE__*/_jsxDEV(LoginRegister, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n_c = CheckLogin;\nfunction App() {\n  let loggedIn;\n  //fetch /loggedIn and if it returns true, then you change components on page by making state variable\n  // i did it this way, so that i either ask login, or i show mneu\n  CheckLogin();\n  fetch(\"http://localhost:3308/loggedIn\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(loggedIn)\n  }).then(response => {\n    console.log(response);\n    console.log(loggedIn);\n    if (response.ok) {\n      if (!loggedIn) {} else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(GreetUser, {\n            username: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), \" // add username from response here\", /*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }).then(data => {\n    console.log(data);\n  }).catch(error => {\n    console.log(error);\n  });\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckLogin\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","Component","LoginRegister","GreetUser","Categories","QuizParams","jsxDEV","_jsxDEV","CheckLogin","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","loggedIn","fetch","method","headers","body","JSON","stringify","then","response","console","log","ok","className","children","username","data","catch","error","_c2","$RefreshReg$"],"sources":["D:/SSD Backup/Desktop/HTML-KIKO/Advanced 2022 JS Projects/2023 React/react-nodejs-trivia app/react-node-trivia-app/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport LoginRegister from \"./components/LoginRegister\";\nimport GreetUser from \"./components/GreetUser\";\nimport Categories from \"./components/Categories\";\nimport QuizParams from \"./components/QuizParams\";\n\n// fetch user in here\n// if i want to post or get, i do it in the other files\n\nfunction CheckLogin() {\n  return <LoginRegister />;\n}\nfunction App() {\n  let loggedIn;\n  //fetch /loggedIn and if it returns true, then you change components on page by making state variable\n  // i did it this way, so that i either ask login, or i show mneu\n  CheckLogin();\n  fetch(\"http://localhost:3308/loggedIn\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(loggedIn),\n  })\n    .then((response) => {\n      console.log(response);\n      console.log(loggedIn);\n      if (response.ok) {\n        if (!loggedIn) {\n        } else {\n          return (\n            <div className=\"App\">\n              <GreetUser username=\"\" /> // add username from response here\n              <Categories />\n            </div>\n          );\n        }\n      }\n    })\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;;AAEhD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,UAAUA,CAAA,EAAG;EACpB,oBAAOD,OAAA,CAACL,aAAa;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1B;AAACC,EAAA,GAFQL,UAAU;AAGnB,SAASM,GAAGA,CAAA,EAAG;EACb,IAAIC,QAAQ;EACZ;EACA;EACAP,UAAU,CAAC,CAAC;EACZQ,KAAK,CAAC,gCAAgC,EAAE;IACtCC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;EAC/B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAK;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrBC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACrB,IAAIQ,QAAQ,CAACG,EAAE,EAAE;MACf,IAAI,CAACX,QAAQ,EAAE,CACf,CAAC,MAAM;QACL,oBACER,OAAA;UAAKoB,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAClBrB,OAAA,CAACJ,SAAS;YAAC0B,QAAQ,EAAC;UAAE;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,uCACzB,eAAAL,OAAA,CAACH,UAAU;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAEV;IACF;EACF,CAAC,CAAC,CACDU,IAAI,CAAEQ,IAAI,IAAK;IACdN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;EACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;EACpB,CAAC,CAAC;AACN;AAACC,GAAA,GAjCQnB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}