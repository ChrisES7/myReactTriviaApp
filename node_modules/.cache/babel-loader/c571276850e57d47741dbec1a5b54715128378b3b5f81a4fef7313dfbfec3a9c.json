{"ast":null,"code":"var _jsxFileName = \"D:\\\\SSD Backup\\\\Desktop\\\\HTML-KIKO\\\\Advanced 2022 JS Projects\\\\2023 React\\\\react-nodejs-trivia app\\\\react-node-trivia-app\\\\src\\\\components\\\\LoginRegister.js\";\nimport React, { Component } from \"react\";\nimport GreetUser from \"./GreetUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LoginRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.validate = this.validate.bind(this);\n  }\n  // how do i send the variable that tells node js if its login or register\n  // an input onclick or listener?\n\n  validate(event) {\n    const form = document.querySelector(\"form\");\n    let username = document.querySelector('input[name=\"username\"]');\n    console.log(username);\n    // this.props.onLogin(username);\n    console.log(this.props);\n    console.log(event.target.name);\n    let action = event.target.name;\n    if (action == \"login\") {\n      form.action = \"/login\";\n      form.method = \"POST\";\n      fetch(`http://localhost:3308/loggedIn?username=${username}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          loggedIn: 1\n        })\n      }).then(response => response.json()).then(response => console.log(JSON.stringify(response)));\n    }\n    // if (buttonType === \"loginBtn\") {\n    //   console.log(\"Login\");\n    //   form.action = \"/login\";\n    //   form.method = \"GET\";\n    // } else if (buttonType === \"registerBtn\") {\n    //   console.log(\"Register\");\n    //   form.action = \"/register\";\n    //   form.method = \"GET\";\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"LOG IN\",\n          name: \"login\",\n          onClick: this.validate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"REGISTER\",\n          name: \"register\",\n          onClick: this.validate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LoginRegister;","map":{"version":3,"names":["React","Component","GreetUser","jsxDEV","_jsxDEV","LoginRegister","constructor","props","state","validate","bind","event","form","document","querySelector","username","console","log","target","name","action","method","fetch","headers","Accept","body","JSON","stringify","loggedIn","then","response","json","render","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick"],"sources":["D:/SSD Backup/Desktop/HTML-KIKO/Advanced 2022 JS Projects/2023 React/react-nodejs-trivia app/react-node-trivia-app/src/components/LoginRegister.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport GreetUser from \"./GreetUser\";\n\nclass LoginRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.validate = this.validate.bind(this);\n  }\n  // how do i send the variable that tells node js if its login or register\n  // an input onclick or listener?\n\n  validate(event) {\n    const form = document.querySelector(\"form\");\n    let username = document.querySelector('input[name=\"username\"]');\n    console.log(username);\n    // this.props.onLogin(username);\n    console.log(this.props);\n    console.log(event.target.name);\n\n    let action = event.target.name;\n\n    if (action == \"login\") {\n      form.action = \"/login\";\n      form.method = \"POST\";\n      fetch(`http://localhost:3308/loggedIn?username=${username}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ loggedIn: 1 }),\n      })\n        .then((response) => response.json())\n        .then((response) => console.log(JSON.stringify(response)));\n    }\n    // if (buttonType === \"loginBtn\") {\n    //   console.log(\"Login\");\n    //   form.action = \"/login\";\n    //   form.method = \"GET\";\n    // } else if (buttonType === \"registerBtn\") {\n    //   console.log(\"Register\");\n    //   form.action = \"/register\";\n    //   form.method = \"GET\";\n    // }\n  }\n  render() {\n    return (\n      <div>\n        <form action=\"\">\n          <div>\n            <input type=\"text\" placeholder=\"Username\" name=\"username\" />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"LOG IN\"\n            name=\"login\"\n            onClick={this.validate}\n          />\n          <input\n            type=\"submit\"\n            value=\"REGISTER\"\n            name=\"register\"\n            onClick={this.validate}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginRegister;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,SAASJ,SAAS,CAAC;EACpCK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;EAC1C;EACA;EACA;;EAEAD,QAAQA,CAACE,KAAK,EAAE;IACd,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAC3C,IAAIC,QAAQ,GAAGF,QAAQ,CAACC,aAAa,CAAC,wBAAwB,CAAC;IAC/DE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,KAAK,CAAC;IACvBS,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,MAAM,CAACC,IAAI,CAAC;IAE9B,IAAIC,MAAM,GAAGT,KAAK,CAACO,MAAM,CAACC,IAAI;IAE9B,IAAIC,MAAM,IAAI,OAAO,EAAE;MACrBR,IAAI,CAACQ,MAAM,GAAG,QAAQ;MACtBR,IAAI,CAACS,MAAM,GAAG,MAAM;MACpBC,KAAK,CAAE,2CAA0CP,QAAS,EAAC,EAAE;QAC3DM,MAAM,EAAE,MAAM;QACdE,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAE;QAAE,CAAC;MACtC,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAKd,OAAO,CAACC,GAAG,CAACS,IAAI,CAACC,SAAS,CAACG,QAAQ,CAAC,CAAC,CAAC;IAC9D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EACAE,MAAMA,CAAA,EAAG;IACP,oBACE5B,OAAA;MAAA6B,QAAA,eACE7B,OAAA;QAAMgB,MAAM,EAAC,EAAE;QAAAa,QAAA,gBACb7B,OAAA;UAAA6B,QAAA,eACE7B,OAAA;YAAO8B,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC,UAAU;YAAChB,IAAI,EAAC;UAAU;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC,eACNnC,OAAA;UACE8B,IAAI,EAAC,QAAQ;UACbM,KAAK,EAAC,QAAQ;UACdrB,IAAI,EAAC,OAAO;UACZsB,OAAO,EAAE,IAAI,CAAChC;QAAS;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFnC,OAAA;UACE8B,IAAI,EAAC,QAAQ;UACbM,KAAK,EAAC,UAAU;UAChBrB,IAAI,EAAC,UAAU;UACfsB,OAAO,EAAE,IAAI,CAAChC;QAAS;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV;AACF;AAEA,eAAelC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}